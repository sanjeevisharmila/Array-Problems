class Solution {
    public int[] twoSum(int[] nums, int target) {  
      for(int i=0;i<nums.length;i++)
      {
        for(int j=i+1;j<nums.length;j++)
        {
            if(nums[i]+nums[j]==target)
            {
                return new int[] {i,j};
            }
        }
      }
      return new int[] {};
    }  
}

time: O(n*n)
space=O(1)

class Solution {
    public int[] twoSum(int[] nums, int target) {  
      Map<Integer,Integer>mp=new HashMap<>();
      for(int i=0;i<nums.length;i++)
      {
         int remaining=target-nums[i];
         if(mp.containsKey(remaining))
         {
            return new int[] {mp.get(remaining),i};
         }
         mp.put(nums[i],i);
      }
      return new int[] {};
    }  
}
 time: O(n)
 space=O(n)
