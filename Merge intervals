class Solution {
    public int[][] merge(int[][] intervals) {
        int n=intervals.length;
        Arrays.sort(intervals, (a,b) -> a[0]-b[0]);
        List<int[]>ans=new ArrayList<>();
        for(int i=0;i<n;i++)
        {
            int start=intervals[i][0];
            int end=intervals[i][1];
            int j=i+1;
            while(j<n && intervals[j][0]<=end)
            {
                start=Math.min(start,intervals[j][0]);
                end=Math.max(end,intervals[j][1]);
                j++;
            }
            ans.add(new int[]{start,end});
            i=j-1;
        }
        return ans.toArray(new int[ans.size()][]);
    }
}

time=O(n logn)+O(2n)
space=O(n)
