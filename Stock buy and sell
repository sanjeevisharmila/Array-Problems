class Solution {
    public int maximumProfit(int prices[]) {
      int res=0;
      for(int i=0;i<prices.length-1;i++)
      {
          for(int j=i+1;j<prices.length;j++)
          {
              res=Math.max(res,prices[j]-prices[i]);
          }
      }
      return res;
    }
}

time=O(n*n)
space=O(1)

class Solution {
    public int maximumProfit(int prices[]) {
       int res=0;
       int mini=prices[0];
       for(int i=1;i<prices.length;i++)
       {
           mini=Math.min(prices[i],mini);
           res=Math.max(res,prices[i]-mini);
       }
       return res;
    }
}

time=O(n)
space=O(1)
